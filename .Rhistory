cCross <- cbind(cCross, t))
sapply(listFiles, function(x)
t <- read.csv(x, skip = 2)
cCross <- cbind(cCross, t))
sapply(listFiles, function(x)
t <- read.csv(x, skip = 2) cCross <- cbind(cCross, t))
sapply(listFiles, function(x)
read.csv(x, skip = 2))
read.csv(listFiles[1], skip = 2))
read.csv(listFiles[1], skip = 2)
lapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross[[1]]
?gsub
lapply(cCross, function(x)
names(x[2]) <- gsub("Cyclo.cross...",names(x[2]))
)
str(cCross)
cCross[[1]][2]
?lapply
sapply(cCross, function(x)
names(x[2]) <- gsub("Cyclo.cross...",names(x[2]))
)
lapply(cCross, function(x),
lapply(cCross, function(x)
names(x[2]) <- gsub("Cyclo.cross...",names(x[2]))
)
sapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2))
lapply(cCross, function(x) {names(x[2]) <- gsub("Cyclo.cross...",names(x[2]))
})
lapply(cCross, head)
lapply(cCross, names)
lapply(cCross, function(x) names(x[2]) <- gsub("Cyclo.cross...",names(x[2])))
lapply(cCross, function(x), names(x[2]) <- gsub("Cyclo.cross...",names(x[2])))
lapply(cCross, function(x) gsub("Cyclo.cross...",names(x[2])))
lapply(cCross, function() names([2]) <- gsub("Cyclo.cross...",names([2])))
lapply(cCross, names(x[2]) <- gsub("Cyclo.cross...",names(x[2])))
replaceColName <- function(x) {
names(x[2]) <- gsub("Cyclo.cross...",names(x[2]))
}
lapply(cCross, replaceColName)
names(cCross[[1]][2]) <- gsub("Cyclo.cross...",names(cCross[[1]][2]))
?gsub
lapply(cCross, function(x)
names(x[2]) <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x[2])))
cCross[[1]]
lapply(cCross, function(x)
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x[2])))
lapply(cCross,names)
lapply(cCross, function(x)
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2]))
lapply(cCross,names)
lapply(cCross, function(x)
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
x)
lapply(cCross, function(x){
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
x})
lapply(cCross,names)
cCross <- lapply(cCross, function(x)
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2]))
cCross
cCross[[2]]
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross <- lapply(cCross, function(x){
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
x})
cCross[[2]][2]
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross <- lapply(cCross, function(x){
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
names(x)[2] <- gsub(pattern = ".",replacement = "",x = names(x)[2])
x})
lapply(cCross,names)
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross <- lapply(cCross, function(x){
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
names(x)[2] <- gsub(pattern = "?.",replacement = "",x = names(x)[2])
x})
lapply(cCross,names)
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross <- lapply(cCross, function(x){
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
names(x)[2] <- gsub(pattern = "~.",replacement = "",x = names(x)[2])
x})
lapply(cCross,names)
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2))
cCross <- lapply(cCross, function(x){
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
names(x)[2] <- gsub(pattern = "[.]",replacement = "",x = names(x)[2])
x})
lapply(cCross,names)
?spline
library(ggplot2)
lapply(cCross,str)
cCross <- lapply(cCross, function(x){
x[1] <- as.Date(x[1], format = "%Y-%m-%d")
x
})
cCross[[1]][1]
as.Date(cCross[[1]][1], format = "%Y-%m-%d")
y <- cCross[[1]][1]
as.Date(y, format = "%Y-%m-%d")
?as.Date
cCross <- lapply(cCross, function(x){
x[1] - as.character(x[1])
x[1] <- as.Date(x[1], format = "%Y-%m-%d")
x
})
cCross <- lapply(cCross, function(x){
x[1] <- as.character(x[1])
x[1] <- as.Date(x[1], format = "%Y-%m-%d")
x
})
y <- as.character(cCross[[1]][1])
cCross <- lapply(listFiles, function(x)
read.csv(x, skip = 2, stringsAsFactors = FALSE))
cCross <- lapply(cCross, function(x){
names(x)[2] <- gsub(pattern = "Cyclo.cross...",replacement = "",x = names(x)[2])
names(x)[2] <- gsub(pattern = "[.]",replacement = "",x = names(x)[2])
x})
cCross <- lapply(cCross, function(x){
x[1] <- as.Date(x[1], format = "%Y-%m-%d")
x
})
y <- cCross[[1]][1]
str(y)
as.Date(y, format = "%Y-%m-%d")
as.Date(y, format = "%Y-%M-%D")
as.Date(y)
head(y)
class(y)
cCross <- lapply(cCross, function(x){
x[, 1] <- as.Date(x[, 1], format = "%Y-%m-%d")
x
})
lapply(cCross,str)
lapply(cCross, function(x){
n <- names(x)
p <- ggplot(data = x, aes_string(x = n[1], y = n[2])) +
geom_line()
print(p)
})
names(cCross)
countryNames <- lapply(cCross, function(x)
names(x)[2]
)
countryNames <- sapply(cCross, function(x)
names(x)[2]
)
countryNames
names(cCross) <- sapply(cCross, function(x)
names(x)[2]
)
?sort
?sort.list
sort.list(cCross)
sort.list(names(cCross))
names(cCross)
order(names(cCross))
spline(x = rnorm(5), y = rnorm(5))
?spline
?dlm
?smooth.spline
smooth.spline(x = rnorm(5), y = rnorm(5))
s <- smooth.spline(x = rnorm(5), y = rnorm(5))
predict(s)
y
x <- rnorm(5)
y <- rnorm(5)
s <- smooth.spline(x = x, y = y)
predict(s)
y
plot(s)
plot(x,y)
?loess
lapply(cCross, function(x) {
s <- loess(x[, 2] ~ x[, 1])
smoothIndex <- predict(s)$y
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue")
return(p)
})
x <- 1:10
y <- c(2,4,6,8,7,12,14,16,18,20)
lo <- loess(y~x)
plot(x,y)
lines(predict(lo), col='red', lwd=2)
x
s <- loess(y~x)
predict(s)
plot(predict(s))
plot(x,y)
lapply(cCross, function(x) {
s <- loess(x[, 2] ~ x[, 1])
smoothIndex <- predict(s)
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue")
return(p)
})
lapply(cCross, function(x) {
s <- loess(x[, 2] ~ x[, 1])
smoothIndex <- predict(s)
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue")
return(p)
})
x <- cCross[[1]]
s <- loess(x[, 2] ~ x[, 1])
plot(x[,1],x[,2])
smooth(x[,1],x[,2])
?smooth
smooth(x[,2])
plot(smooth(x[,2]))
library(dlm)
lapply(cCross, function(x) {
#  s <- loess(x[, 2] ~ x[, 1])
smoothIndex <- smooth(x[, 2])
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue")
return(p)
})
smoothIndex <- smooth(x[, 2])
smoothIndex
plot(smoothIndex)
lapply(cCross, function(x) {
#  s <- loess(x[, 2] ~ x[, 1])
smoothIndex <- smooth(x[, 2])
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue")
return(p)
})
class(smoothIndex)
as.numeric((smoothIndex))
s <- loess(x[, 2] ~ x[, 1])
names(x)
s <- loess(Belgium ~ Week, data = x)
plot(x$Week,x$Belgium)
?loess
s <- loess(Belgium, data = x)
s <- loess(Belgium ? Week, data = x)
s <- loess(Belgium ~ Week, data = x)
?smooth.spline
x <- rnorm(50)
y <- rnorm(50)
s <- loess(y~x)
plot(x,y)
lines(predict(s))
plot(predict(s))
s <- loess(Belgium ~ seq(1:length(Week)), data = x)
s <- loess(x$Belgium ~ seq(1:length(x$Week)))
x <- cCross[[1]]
s <- loess(x$Belgium ~ seq(1:length(x$Week)))
plot(predict(s))
predict(s)
lapply(cCross, function(x) {
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
smoothIndex <- predict(s)
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue")
return(p)
})
x
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
smoothDF <- data.frame(trend = predict(s),
week = x[, 1])
smoothDF$Year <- as.factor(format(df$week, format = "%Y"))
smoothDF$Year <- as.factor(format(smoothDF$week, format = "%Y"))
aggregate(smoothDF$trend, smoothDF$Year,mean)
?aggregate
aggregate(x = smoothDF$trend, by = list(smoothDF$Year),mean)
smoothDF$trend
aggregate(x = smoothDF$trend, by = list(Year = smoothDF$Year),mean)
DF$Year2018 <- ifelse(DF$Year == "2018", "2018", "2017-2013")
DF <- data.frame(trend = predict(s),
week = x[, 1])
DF$Year <- as.factor(format(DF$week, format = "%Y"))
DF$Year2018 <- ifelse(DF$Year == "2018", "2018", "2017-2013")
DF <- aggregate(x = DF$trend, by = list(Year = DF$Year2018),mean)
DF
names(DF)[2] <- names(x)[2]
DF
n <- names(DF)
ggplot(data = DF, aes_string(x = n[1], y = n[2])) +
geom_col()
DF
DF$Proportion <- DF[2,2]/DF[1,2]
DF$Proportion
DF[2,2]/DF[1,2]
DF$Year <- as.factor(format(DF$week, format = "%Y-%m"))
DF
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
DF <- data.frame(trend = predict(s),
week = x[, 1])
DF$Year <- as.factor(format(DF$week, format = "%Y-%m"))
head(DF)
DF$Month <- as.factor(format(DF$week, format = "%m"))
head(DF)
DF$Season <- ifelse(month > 5, Year,Year-1)
DF$Season <- ifelse(DF$Month > 5, Year,Year-1)
str(DF)
DF$Month <- format(DF$week, format = "%m")
str(DF)
DF$Month <- as.numeric(format(DF$week, format = "%m"))
DF$Season <- ifelse(DF$Month > 5, Year,Year-1)
DF$Year <- as.numeric(format(DF$week, format = "%Y"))
DF$Month <- as.numeric(format(DF$week, format = "%m"))
DF$Season <- ifelse(DF$Month > 5, DF$Year,DF$Year-1)
head(DF)
tail(DF)
tail(DF, n=30)
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
DF <- data.frame(trend = predict(s),
week = x[, 1])
DF$Year <- as.numeric(format(DF$week, format = "%Y"))
DF$Month <- as.numeric(format(DF$week, format = "%m"))
DF$Season <- ifelse(DF$Month > 5, DF$Year,DF$Year-1)
DF$Last2Seasons <- ifelse(DF$Season %in% c(2017, 2018), "2017 and 2018", "2013 till 2016")
DF <- aggregate(x = DF$trend, by = list(Season = DF$Season),mean)
DF$Change <- sapply(DF$x, function(x) x/x[nrow(DF)])
DF
sapply(DF$x, function(x) x/x[nrow(DF)])
sapply(DF$x, function(x) x/DF$x[nrow(DF)])
sapply(DF$x, function(x) x/x[-1])
?lag
lag(1:4)
sapply(1:nrow(DF), function(i) DF$x[i]/DF$x[i-1])
unlist(sapply(1:nrow(DF), function(i) DF$x[i]/DF$x[i-1]))
DF
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) DF$x[i]/DF$x[i-1])))
DF
names(DF)[2] <- names(x)[2]
n <- names(DF)
n
ggplot(data = DF, aes_string(x = n[1], y = n[3])) +
geom_col()
DF <- aggregate(x = DF$trend, by = list(Season = DF$Season),mean)
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) DF$x[i]/DF$x[i-1]-1)))
DF
DF <- aggregate(x = DF$trend, by = list(Season = DF$Season),mean)
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) (DF$x[i]/DF$x[i-1])-1)))
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
DF <- data.frame(trend = predict(s),
week = x[, 1])
DF$Year <- as.numeric(format(DF$week, format = "%Y"))
DF$Month <- as.numeric(format(DF$week, format = "%m"))
DF$Season <- ifelse(DF$Month > 5, DF$Year,DF$Year-1)
DF <- aggregate(x = DF$trend, by = list(Season = DF$Season),mean)
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) (DF$x[i]/DF$x[i-1])-1)))
DF
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) (DF$x[i]/DF$x[i-1])-1)*100))
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) (DF$x[i]/DF$x[i-1]-1)*100)))
DF
geoData <- read.csv("geoMap.csv", skip = 2)
geoData
head(geoData)
names(geoData)[2] <- "index"
str(geoData)
table(geoData$index)
geoData$index <- ifelse(geoData$index == "<1","0",geoData$index)
table(geoData$index)
head(geoData)
geoData <- read.csv("geoMap.csv", skip = 2)
names(geoData)[2] <- "index"
names(geoData)[2] <- "index"
geoData$index[geoData$index == "<1"] <- "0"
geoData <- read.csv("geoMap.csv", skip = 2, stringsAsFactors = FALSE)
names(geoData)[2] <- "index"
geoData$index[geoData$index == "<1"] <- "0"
head(geoData)
geoData$index <- as.numeric(geoData$index)
head(geoData)
geoData <- read.csv("geoMap.csv", skip = 2, stringsAsFactors = FALSE)
names(geoData)[2] <- "index"
geoData$index[geoData$index == "<1"] <- "0"
geoData$index <- as.numeric(geoData$index)
print(geoData[order(geoData$index), ])
geoData <- read.csv("geoMap.csv", skip = 2, stringsAsFactors = FALSE)
names(geoData)[2] <- "index"
geoData$index[geoData$index == "<1"] <- "0"
geoData$index <- as.numeric(geoData$index)
print(geoData[order(geoData$index, decreasing = FALSE), ])
geoData <- read.csv("geoMap.csv", skip = 2, stringsAsFactors = FALSE)
names(geoData)[2] <- "index"
geoData$index[geoData$index == "<1"] <- "0"
geoData$index <- as.numeric(geoData$index)
print(geoData[order(geoData$index, decreasing = TRUE), ])
geoData <- read.csv("geoMap.csv", skip = 2, stringsAsFactors = FALSE)
names(geoData)[2] <- "index"
geoData$index[geoData$index == "<1"] <- "0"
geoData$index <- as.numeric(geoData$index)
head(geoData[order(geoData$index, decreasing = TRUE), ], n = 15)
1/4*4/3
4/3
0.11*6
0.07*8
0.04*30
0.1*6
s <- loess(cCross$Worldwide[, 2] ~ seq(1:length(cCross$Worldwide[, 1])))
smoothIndex <- predict(s)
n <- names(cCross$Worldwide)
ggplot(data = cCross$Worldwide) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = cCross$Worldwide[, 1], y = smoothIndex), colour = "blue")
smoothTrend <- lapply(cCross, function(x) {
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
smoothIndex <- predict(s)
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue")
return(p)
})
print(smoothTrend$Worldwide)
smoothTrend <- lapply(cCross, function(x) {
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
smoothIndex <- predict(s)
n <- names(x)
p <- ggplot(data = x) +
geom_line(aes_string(x = n[1], y = n[2])) +
geom_line(aes(x = x[, 1], y = smoothIndex), colour = "blue") +
ylab("Google Search Index (100 = max point)") +
ggtitle(paste0("Popularity of cyclo-cross related search - ", n[2]))
return(p)
})
print(smoothTrend$Worldwide)
seasonTrend <- lapply(cCross, function(x){
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
DF <- data.frame(trend = predict(s),
week = x[, 1])
DF$Year <- as.numeric(format(DF$week, format = "%Y"))
DF$Month <- as.numeric(format(DF$week, format = "%m"))
DF$Season <- ifelse(DF$Month > 5, DF$Year,DF$Year-1)
DF <- aggregate(x = DF$trend, by = list(Season = DF$Season),mean)
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) (DF$x[i]/DF$x[i-1]-1)*100)))
names(DF)[2] <- names(x)[2]
n <- names(DF)
trend <- ggplot(data = DF, aes_string(x = n[1], y = n[2])) +
geom_col() +
ylab("Google Search Index (100 = max point)") +
ggtitle(paste0("Trend of popularity of cyclo-cross related search - ", n[2]))
change <- ggplot(data = DF, aes_string(x = n[1], y = n[3])) +
geom_col() +
ylab("Google Search Index (100 = max point)") +
ggtitle(paste0("Trend of popularity of cyclo-cross related search - ", n[2]))
return(seasonList(Trend = trend,
Change = change,
Table = DF))
})
seasonTrend <- lapply(cCross, function(x){
s <- loess(x[, 2] ~ seq(1:length(x[, 1])))
DF <- data.frame(trend = predict(s),
week = x[, 1])
DF$Year <- as.numeric(format(DF$week, format = "%Y"))
DF$Month <- as.numeric(format(DF$week, format = "%m"))
DF$Season <- ifelse(DF$Month > 5, DF$Year,DF$Year-1)
DF <- aggregate(x = DF$trend, by = list(Season = DF$Season),mean)
DF$Change <- c(NA,
unlist(sapply(1:nrow(DF), function(i) (DF$x[i]/DF$x[i-1]-1)*100)))
names(DF)[2] <- names(x)[2]
n <- names(DF)
trend <- ggplot(data = DF, aes_string(x = n[1], y = n[2])) +
geom_col() +
ylab("Google Search Index (100 = max point)") +
ggtitle(paste0("Trend of popularity of cyclo-cross related search - ", n[2]))
change <- ggplot(data = DF, aes_string(x = n[1], y = n[3])) +
geom_col() +
ylab("Google Search Index (100 = max point)") +
ggtitle(paste0("Trend of popularity of cyclo-cross related search - ", n[2]))
return(list(Trend = trend,
Change = change,
Table = DF))
})
print(seasonTrend$Worldwide$Trend)
print(seasonTrend$Worldwide$Trend)
print(seasonTrend$Belgium$Trend)
print(seasonTrend$Netherlands$Trend)
?gridExtra
library(gridExtra)
?grid.arrange
grid.arrange(seasonTrend$UnitedStates, seasonTrend$UnitedKingdom, seasonTrend$France, seasonTrend$Germany, nrow = 2, ncol = 2)
grid.arrange(seasonTrend$UnitedStates$Trend, seasonTrend$UnitedKingdom$Trend, seasonTrend$France$Trend, seasonTrend$Germany$Trend, nrow = 2, ncol = 2)
rm(list=ls())
